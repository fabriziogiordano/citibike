<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="manifest" href="/assets/manifest.webmanifest" />
  <title>Fab Stations</title>
</head>
<style>
  body {
    font-size: 1.5rem;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    margin: 0;
    padding: 0;
  }

  h1 {
    font-size: 120%;
    margin: 1.2rem 8px 1.8rem;
    color: rgb(18, 66, 175);
  }

  ul {
    margin: .5rem;
    padding: 0;
  }

  li {
    list-style: none;
    margin-bottom: 0.75rem;
  }

  b {
    font-size: 100%;
    display: block;
    margin-bottom: .5rem;
  }

  a {
    font-weight: lighter;
    font-size: 70%;
    display: block;
    color: gray;
  }

  em {
    font-size: 80%;
    display: flex;
    flex-direction: row;
    font-style: normal;
  }

  i {
    font-style: normal;
    width: 60px;
    display: inline-block;
  }

  .bikes {
    width: 200px;
  }

  .red {
    font-weight: bold;
    color: red;
  }

  .green {
    font-weight: bold;
    color: green;
  }

button {
    align-items: center;
    appearance: none;
    background-color: #fff;
    border-radius: 24px;
    border-style: none;
    box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
    box-sizing: border-box;
    color: #3c4043;
    cursor: pointer;
    fill: currentcolor;
    font-size: 12px;
    font-weight: 500;
    height: 44px;
    justify-content: center;
    letter-spacing: .25px;
    line-height: normal;
    max-width: 100%;
    overflow: visible;
    padding: 2px 24px;
    position: relative;
    text-align: center;
    text-transform: none;
    transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    width: auto;
    will-change: transform,opacity;
    z-index: 0;
    display: flex;
    margin: 0 auto;
    margin-top: 2rem;
  }

  strong {
    width: 100%;
    margin: 0 auto;
    color: gray;
    position: absolute;
    bottom: 2.4rem;
    text-align: center;
    font-size: 60%;
    font-weight: 200;
  }
</style>

<body>
  <h1>Fab's Citi Bike bookmarks</h1>
  <ul>
    {% for station in data %}
      {% assign num_bikes_available_int = station.num_bikes_available | plus: 0 %}
      {% assign num_docks_available_int = station.num_docks_available | plus: 0 %}
      <li>
        <b>
          {{ station.label }}
          <a href="https://www.google.com/maps/dir/?api=1&destination={{ station.lat }}%2C{{ station.lon }}">{{ station.name }}</a>
        </b>
        <em>
          <div class="bikes">
            <i>Bikes:</i>
            <span
              {% if num_bikes_available_int <= 2 %}class="red"{% endif %}
              {% if num_bikes_available_int >= 10 %}class="green"{% endif %}
            >
              {{ station.num_bikes_available }} + {{ station.num_ebikes_available }}
            </span>
          </div>
          <div>
            <i>Docks:</i> 
            <span
              {% if num_docks_available_int <= 2 %}class="red"{% endif %}
              {% if num_docks_available_int >= 10 %}class="green"{% endif %}
            >
              {{ station.num_docks_available }}
            </span>
          </div>
        </em>
      </li>
    {% endfor %}
  </ul>

  <button id="reload" type="button" onClick="window.location.reload()">Refresh</button>

  <strong id="last_update" >Last update {{ delta }} seconds ago</strong>

  <script>
    const delta = {{ delta }};
    if(delta > 30) {
      console.log('Reloading...');
      document.getElementById('reload').innerText = 'Reloading....';
      window.location.reload();
    }


    const $last_update = document.getElementById('last_update');
    let last_update_counter = 0;
    setInterval(lastUpdated, 1000);
    function lastUpdated(){
      last_update_counter = last_update_counter + 1;
      const seconds = delta + last_update_counter;
      const next_update = 30 - last_update_counter;
      $last_update.innerHTML = `Last update ${seconds} seconds ago<br>Auto refreshing in ${next_update} seconds`;
      if(next_update < 1) window.location.reload();
    }
  </script>
</body>
</html>